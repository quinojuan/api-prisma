generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model post {
  id      Int    @id @default(autoincrement())
  title   String @db.VarChar(255)
  content String
}

model producto {
  id           Int    @id @default(autoincrement())
  descripcion  String
  precio_venta Int
  codigo       Json // me permite agregar tanto enteros como strings
}

model informe {
  id            Int          @id @default(autoincrement())
  createdAt     DateTime     @default(now())
  anio          Int          @default(2023)
  mes           Meses
  publicaciones Int?         @default(0)
  videos        Int?         @default(0)
  horas         Int?         @default(0)
  revisitas     Int?         @default(0)
  estudios      Int?         @default(0)
  notas         String?
  publicador    publicadores @relation(fields: [publicadorId], references: [id])
  publicadorId  Int
}

model publicadores {
  id                 Int       @id @default(autoincrement())
  nombre             String
  apellido           String
  genero             Genero
  fecha_nacimiento   String?
  fecha_bautismo     String?
  esperanza          Esperanza
  estado             Estado @default(ACTIVO)
  anciano            Int   @default(0)
  siervo_ministerial Int   @default(0)
  precursor_regular  Int   @default(0)
  precursor_especial Int   @default(0)
  grupo              Grupo
  informes           informe[]
}

enum Genero {
  HOMBRE
  MUJER
}

enum Esperanza {
  OTRAS_OVEJAS
  UNGIDO
}

enum Meses {
  ENERO
  FEBRERO
  MARZO
  ABRIL
  MAYO
  JUNIO
  JULIO
  AGOSTO
  SEPTIEMBRE
  OCTUBRE
  NOVIEMBRE
  DICIEMBRE
}

enum Grupo {
  G1
  G2
  G3
  G4
}
enum Estado {
  ACTIVO
  INACTIVO
}

model User {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  dni       Int       @unique
  phone     Int
  name      String
  surname   String
  Payment   Payment[]
  services  Service[] @relation("CustomerServices")
  role      Role      @default(CUSTOMER)
}

model Service {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  title      String
  amount     Float
  customer   User[]    @relation("CustomerServices")
  customerId String
  Payments   Payment[] @relation("PaymentService")
}

model Payment {
  id             String    @id @default(cuid())
  createdAt      DateTime  @default(now())
  type           Type      @default(CASH)
  amount         Float
  checkNumber    Int?
  owner          String?
  collectionDate DateTime?
  note           String?
  customer       User      @relation(fields: [customerId], references: [id])
  customerId     String
  services       Service[] @relation("PaymentService")
}

enum Role {
  CUSTOMER
  ADMIN
  SECRETARY
}

enum Type {
  CARD
  CASH
  TRANSFER
  CHECK
}